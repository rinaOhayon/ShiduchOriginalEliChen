<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACo
        CAAAAk1TRnQBSQFMAgEBAwEAARgBAAEYAQABIAEAASABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAGA
        AwABIAMAAQEBAAEYBgABMJkAA8kbMP8AAwADwRgwA/08AAPAJDADO/YAA1gkMDYADzADcgwAA/oMMANK
        OQADgRgwA2yWAAP9DzADNAPTA/ID8QO+DzAtAAP+DDAD/BsACTAzACcwkAADgQwwGwADOQYwA0EnAAP5
        CTADUyQABjADQCoAA+gPMAOFA/AJAAP6DDCKAAM5CTAD5yEACTAkAAP9CTAD8ScACTAnAAM7DDAbAANf
        BjADx4QAAz0JMCcAA/4GMCQACTAD/SoACTAkAAwwA/4hAAkwgQADlwkwLQAGMCEACTAD9hIAA9gYAAkw
        IQAMMCcAA50GMH4AA/4JMBUAA9oVAAP/BjAeAANKBjADfxIABjADhhIAA/wGMAOsHgADRgkwKgAD6gYw
        fgAJMBIAA+gGMBUACTAeAAkwDwADuQwwA+EMAAP/CTAeAAPwCTAVAAPsFQADWwYwewADOwYwA98PAAww
        AzIPAAOSBjADNBsACTAPAAN5FTADXwN5DDAD7x4ACTASAANgBjAVAAkwewAJMA8AFTADvQMAA9cMMB4A
        BjADQQwAA9sJMAMAA/8YMAPnHgAJMAP9DwAMMAM9DwAJMAP7eAAJMA8ADDADABswHgAJMA8ACTAMAAON
        DDADRiQACTAPABUwA3MD2ANDDDB7AAkwDAADcgkwCQADsw8wA2ohAAkwDAAJMAP/PwAJMA8ACTADXwMA
        GzB7AAOtBjAPAAkwPwAD/AYwDwAGMAM7MwAGMAOtBgAGMANLDAAJMAOFCQAD4g8wA/x+AAkwDAAJMEIA
        AzIGMAwAAzIJMBgAA+kDRgYAAzQGMAYACTADAANzBjAMAAP+CTCfAAYwA3IMAAkwQgAJMAwADzAVAAkw
        AwADZQYwBgAJMAMACTAMAAkwogAGMAwAA/gMMAP7FQAJMA8ACTAGAAYwAzISAAM9CTASAAkwAwADlAYw
        BgAJMAMABjADuAwACTAD+hsAA/cGMHgAA8sGMBIAA70JMBIADzAJAA8wAwAGMAOqFQAJMBIABjADOQMA
        CTAGAAkwAwAGMAwAA8AMMAP0FQAD9gwwdQADYwYwFQAD+gYwA0MPABIwAwASMAMABjADzRgABjADwQwA
        CTAGAAkwBgAJMAO6BjASAAP5CTASAAP2EjByAAkwGAAJMA8AJzADAAYwA60YAAkwBgAMMAMyAwAD/wYw
        A9AGAAYwA7oDUwYwFQAD/gYwA2YMAAP2GDBvAANBBjAYAAOvBjASACEwA/wDAAkwGAAGMAM7BgAJMAM5
        BgAJMAYAA8sGMAMACTAYAAkwCQAD9h4wbAADqAYwGAADwwYwFQAbMAP8BgAJMBgABjAD3gYAA5EDlwkA
        CTADxgYACTADAANPBjAYAANmBjAJAA8wBgAPMGwABjAYAAkwGAAVMAP8CQADzgYwA+4SAAkwEgAD+www
        BgAD1gYwA9sDAAPABjAYAANDBjAJAAwwDAAPMGkACTAVAAkwFQAbMAwACTADrwwACTADPQkAA/4SMAkA
        CTAJAAYwA/wVAAkwCQAD/gMwA0gSAA8wZgADRgYwAzsPAAkwFQAhMAkAA/4eMAwAAzQMMAPeCQAJMAP/
        CQAJMBIAA+UGMAO1JwAPMGYAHjADjxIAJzAMABgwEgAGMAP2DAAJMAOSDAADtQkwDAADmQkwLQAMMGkA
        GDADqhUAEjAD/BIwEgADpgYwA74nAAO1CTADTBIAHjAzAAkwbwADQQkwA4cbAA8wA/wGAA8wPwADiQww
        A6EYAANyFTA5AAO6nAAD/gkwA/wMAAkwA/M2ABUwJAAD/QOaA3ADtOQAA+MVAAPlPAAPMAP2/wBvAAP9
        A0oD8eEAAUIBTQE+BwABPgMAASgDAAGAAwABIAMAAQEBAAEBBgABAhYAA/8BAAX/AfgBAQX/BAAB/wH4
        AQEC/wHgAQABfwT/BAAB/wHgAQAC/wHAAfABPwH/AfgBAQH/BAAB/wGAAQABfwH/AQMB/gE/Af8B4AEA
        Af8EAAH/AQcB/AE/Af4BDwH/AR8B/wGAAXABfwQAAf4BDwH+AT8B/AEfAf8BHwH/AQcB/AE/BAAB/AE/
        Af4BPwH8AT8B/wEfAf4BDwH+AT8EAAH4AX8B/wE/AfgBfgH/AR8B/AE/Af4BPwQAAfAC/gE/AfAB/AF+
        AR8B+AF/Af4BPwQAAfEB+AH+AT8B8QHwATwBPwHwAv4BPwQAAeEB8AF8AT8B4wHgAQABPwHxAfgB/gE/
        BAAB4wHgARABfwHjAcIBAAF/AeEB8AF8AT8EAAHHAcIBAAH/AscBgQH/AeMB4AEAAX8EAAHHAYcBAQH/
        AccBhwL/AccBwgEAAf8EAAKPAv8CjwH/AfgBxwGHAQEB/wQAAY8BHwL/AY8BDwHzARgBjwEPAv8EAAGP
        AR8C/wGPAQcB8QEYAY8BHwL/BAABngEHAvEBjwHDAfEBGAGPAQ8B+AH/BAABHwGHAuABjwHjAfEBGAGe
        AQcB8AF/BAABHwHDAeABQAGPAfEB4wEYAR8BhwHgAT8EAAEfAeMB4AEAAY8B8QGCARgBHwHDAcABHwQA
        AR8B4wHwAQABjwHxAYYBMQEfAeMBgAEPBAABHwHjAfgBAQGPAfEBnAExAR8B4wGDAQcEAAGfAeMB/AED
        AYcB4wHwAWEBHwHjAYcBgwQAAY8B4wH4AQMCwwGAAeMBjwHjAY8BwQQAAYcBxwHwAQEBwAEHAYEBwwGP
        AcMB/wHgBAABwAEHAeABAAHwAQ8BxwOHAf8B8AQAAeABDwHgAQAB/AE/Af4BDwHAAQ8B/wH4BAAB+AE/
        AeABYAL/AfgBHwHgAR8B/wH9BAAC/wHgAfAC/wHAAX8B+AF/Av8EAAL/AvsC/wHABf8EAAb/AccF/wQA
        Cw==
</value>
  </data>
</root>